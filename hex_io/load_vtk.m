%{
Reads a hex mesh from a .vtk file, and returns a mesh object. Note that this isn't a general purpose vtk reader, it's only
intended to support UNSTRUCTURED_GRID datasets and hexahedral cell types.

load_vtk also optionally allows you to load precomputed jacobians. By default, when loading <file_name>.vtk
it will look for a file named <file_name>_jacobians.csv, which is where the jacobians will be stored 
if the csv is generated by save_vtk of calc_mesh_jacobains. If the jacobians for this mesh are stored
elsewhere, specify the jacobian_file parameter.
	file_name		the vtk file to read from
	jacobian_file	optional, specifies the path to the csv of jacobians if applicable 
returns:
	mesh			A mesh object representing the vtk. A mesh object has the fields cells, points, and 
					optionally jacobians, and is the internal representation of a mesh used in this codebase.
%}
function mesh = load_vtk(file_name, jacobian_file)
	if nargin < 2
		[file_path, name, ext] = fileparts(file_name);
		jacobian_file = fullfile(file_path, name + "_jacobians.csv");
	end
	
	file = fopen(file_name, 'r');

	pts_ln = read_until(file, "POINTS");
	n_points = sscanf(pts_ln, 'POINTS %d');

	points = fscanf(file, '%f %f %f', 3*n_points);
	mesh.points = reshape(points, 3, n_points)';

	cell_ln = read_until(file, "CELLS");
	n_cells = sscanf(cell_ln, 'CELLS %d');

	cells = fscanf(file,'%d %d %d %d %d %d %d %d',9*n_cells);
	cells  = reshape(cells, 9, n_cells)';
	mesh.cells = cells(:,2:end) + 1;

	fclose(file);

	try 
		mesh.jacobians = readmatrix(jacobian_file);
	catch
		disp("Jacobians were not loaded (Try computing them with calc_mesh_jacobains).");
	end
end


% read until str is encountered at the beginning of the line, then return that line
function ln = read_until(file, str)
	while ~feof(file)
		ln = fgetl(file);
		if strncmp(str, ln, strlength(str))
			return
		end
	end
end