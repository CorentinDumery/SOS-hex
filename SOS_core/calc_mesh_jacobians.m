%{
Calculates the jacobians of all the hexes in a mesh, and returned a new mesh with the jacobians 
field set to a Nx5 matrix with 1 column of jacobians, 3 column of the u,v,w coordinates of the argmins. 
The results can either be saved directly by setting the the save argument, or can be saved by calling 
save_vtk on the resulting mesh. Note that the resulting mesh is in the correct format to plot the jacobians with plot_mesh
	mesh		a mesh object to compute the jacobians of, for example one generated by load_vtk
	verbose		optional, if set to true prints progess (default 0)
	save_file	optional, if specificied jacobians, argmins, and 2nd eigen values will be written to this file
returns:
	new_mesh	the mesh, with jacobians field set
%}
function new_mesh = calc_mesh_jacobians(mesh, verbose, save_file)
	N = size(mesh.cells, 1);
	model = SOS_jacobian_batch_model;

	Js = zeros(N,1);
	argmins = zeros(N,3);
	second_eigs = zeros(N,1);
	
	for i=1:N
		V = mesh.points(mesh.cells(i, :), :);
		[J, amin, eig2] = model(V);
		Js(i) = J;
		argmins(i, :) = amin;
		second_eigs(i) = eig2;

		if nargin >= 2 && verbose
			disp("finished " + i + " out of " + N)
		end
	end

	if nargin == 3
		writematrix([Js, argmins, second_eigs], save_file)
	end

	new_mesh.points = mesh.points;p
	new_mesh.cells = mesh.cells;
	new_mesh.jacobians = [Js, argmins, second_eigs];
end